<div id="task_summary_outer">
    <div id="bg-image">.</div>
    <div id="EditProfile_container">
        <div id="EditProfile_wrapper">
            <div id="EditProfile">

                <div id="provider-contents"></div>

                <div class="button_group">
                    <div id="save"></div>
                    <div id="saveandcomplete"></div>
                    <div id="cancel"></div>
                </div>

            </div>
        </div>
    </div>
</div>

<div hidden>
    <$client.env.inputBusiness_Title>
    <$client.env.inputSystemTitle>
    <$client.env.inputSalaryGradeLvl>
    <$client.env.inputEmployee_Group_CD>
    <$client.env.inputExempt>
    <$client.env.inputJobType>
    <$client.env.inputEnityName>
    <$client.env.inputEntityAddress>
    <$client.env.inputBuildingAddress>
    <$client.env.inputContract_Length_Dropdown>
    <$client.env.inputManager>
    <$client.env.inputSalary_Amount>
    <$client.env.inputSalaryOffered>
    <$client.env.inputeIP_Target_Pct>
    <$client.env.inputSIP_Amount>
    <$client.env.inputNEW_HIRE_REST_STOCK_UNITS>
    <$client.env.inputBaseMonthly70>
    <$client.env.inputOvertime_Rate>
    <$client.env.inputHire_on_Bonus_Eligible>
    <$client.env.inputHIRE_ON_BONUS_AMOUNT>
    <$client.env.inputInstallment_Amount>
    <$client.env.inputIntroductory_RampUp_Period_Eligible>
    <$client.env.inputVariable_Bonus>
    <$client.env.inputProbationPeriodRequired>
    <$client.env.inputProbationPeriodTime>
    <$client.env.inputProbationPeriodTimeSpain>
    <$client.env.inputRelocation>
    <$client.env.inputRelocationFromStateOrCountry>
    <$client.env.inputRelo_Bonus>
    <$client.env.inputESTIMATED_RELO_COST>
    <$client.env.inputCashBonus>
    <$client.env.inputSalesIncentivePlanIE>
    <$client.env.inputFrench_Salutation>
    <$client.env.inputNationality>
    <$client.env.inputFrench_Nationality>
    <$client.env.inputFrench_PlaceofBirth>
    <$client.env.inputSSNO>
    <$client.env.inputPositionNumber>
    <$client.env.inputFrench_Coefficient>
    <$client.env.inputFrench_Business_Title>
    <$client.env.inputFrench_Salary_Words>
    <$client.env.inputSignonBonus_Written>
    <$client.env.inputFrench_Previous_Employment>
    <$client.env.inputFrench_Transfer_City>
    <$client.env.inputFrench_Transfer_Country>
    <$client.env.inputFrench_Transfer_Entity>
    <$client.env.inputPassportNo>
    <$client.env.inputbusiness_division>
    <$client.env.inputRussian_Business_Title>
    <$client.env.inputRussian_Business_Division>
    <$client.env.inputRussian_Manager_Title>
    <$client.env.inputRussian_Temporary_Duration>
    <$client.env.inputRussian_Temporary_Reason>
    <$client.env.inputRussian_current_long_date>
    <$client.env.inputRussian_Start_Date>
    <$client.env.inputWorkPermitRequired>
    <$client.env.inputTitle>
    <$client.env.inputSales_Pay_Schedule>
    <$client.env.inputContract_Term_Exception>
    <$client.env.inputlegal_intern>
    <$client.env.inputClassification_Level_Italy>
    <$client.env.inputJob_Description_Italy_English>
    <$client.env.inputJob_Description_Italy>
    <$client.env.inputSalary_Words_Spain>
    <$client.env.inputRoleBasedAllowanceEligible>
    <$client.env.inputRoleBasedAllowanceAmt>
    <$client.env.inputMortageSupportEligible>
    <$client.env.inputMortageSupportAmt>
    <$client.env.inputMonthlyHousingAllowanceEligible>
    <$client.env.inputMonthlyHousingAllowanceAmt>
    <$client.env.inputDutyGroup>
    <$client.env.inputNon_Compete>
    <$client.env.inputCitizenship_Status>
    <$client.env.inputDOB>
    <$client.env.inputMngrBsnssTitle>
    <$client.env.inputHIRE_ON_BONUS_CRNCY_CD>
    <$client.env.inputSALARY_CURRENCY>
    <$client.env.inputCurrency_Code_new>
    <$client.env.inputComp_Currency>
    <$client.env.inputESTIMATED_RELO_COST_CRNCY_CD>
    <$client.env.inputContractEndDate>
    <$client.env.inputFTELength>
    <$client.env.inputPayAreaCity>
    <$client.env.inputRelocationFrom>
    <$client.env.inputEligible_Sales_Incentive>
    <$client.env.inputEntity_Transfer>
    <$client.env.inputContinuous_Service_Date>
    <$client.env.inputPrevious_Contract_Signature_Date>
    <$client.env.inputContinuous_Service>
    <$client.env.inputPrevious_Start_Date>
    <$client.env.inputPrevious_End_Date>

    <$client.env.inputPrevious_Entity>
    <$client.env.inputJob_Description>
    <$client.env.inputSalaryWords>
    <$client.env.inputGerman_Previous_Start_Date>
    <$client.env.inputGerman_Previous_End_Date>
    
</div>

<input type="hidden" id="Site_Name" name="Site_Name" value="<$client.env.index.site_name>" />
<input type="hidden" id="Evt_Location_Code" name="Evt_Location_Code" value="<$client.tEventCategories_Category_11.Code>" />
<input type="hidden" id="Evt_Location" name="Evt_Location" value="<$client.tEventCategories_Category_11.Value>" />

<link href="<$link;/main/RedCarpet/FormTemplates/FormSupport/css/front_validator.css>" rel="stylesheet" type="text/css">
<script type="text/javascript" src="<$link;/main/SiteGen/DynamicContent/Snippets/Paypal_EditProfile/js>/country.js"></script>
<script type="text/javascript" src="<$link;/main/SiteGen/DynamicContent/Snippets/Paypal_EditProfile/js>/custom-paypal.js"></script>
<script type="text/javascript" src="<$link;/main/RedCarpet/FormTemplates/FormSupport/js/moment-with-locales.min.js>"></script>
<script type="text/javascript" src="<$link;/main/RedCarpet/FormTemplates/FormSupport/js/front_validator.js>"></script>
<script type="text/javascript" src="<$link;/EMEA_Onboarding/UnplacedPages/EditProfileProvider_EMEA/js/ejs.min.js>"></script>
<script type="text/javascript" src="<$link;/EMEA_Onboarding/UnplacedPages/EditProfileProvider_EMEA/js/bluebird.js>"></script>
<script type="text/javascript" src="<$link;/EMEA_Onboarding/UnplacedPages/EditProfileProvider_EMEA/js/script.js>" defer></script>

<script type="text/javascript">
const EVENT_COUNTRY = $('#Evt_Location_Code').val().substring(0,3);
const FIELDS_CONFIG_PATH = '<$link;/EMEA_Onboarding/UnplacedPages/EditProfileProvider_EMEA/js/config.json>';
const FIELDS_CONFIG = {};
const TEMPLATE_PATH = '<$link;/EMEA_Onboarding/UnplacedPages/EditProfileProvider_EMEA/js/tmpl.ejs>';
    /**
     * SERVICES-36405 | jjucutan | PayPal - Create EMEA Provider Page
     * Define here functions that can be reused
     */
     const focusInputLabel = function(el, isFocused) {
        "use strict";
        if (!el.length) {
            return;
        }
        let label = el.closest('.input_wrapper')
        .find('span.floating-label')
        .removeClass('label-focus')
        .css({"color": "#666666"});
        if (el.val().trim().length > 0 || isFocused) {
            label.addClass('label-focus');
        }
        if (isFocused === true) {
            label.css({"color": "#0070BA"});
        }
    }
    const updateTargetOnChange = function(origin, target) {
        "use strict";
        origin.on('change', function() {
            target.val(origin.val());
            if (origin.is(':checked')) {
                target.val(origin.val());
            }
            if (origin.is('input[type="radio"]')) {
                if (origin.is(':checked')){
                    target.prop('checked', true);
                }
            }
            if (origin.is('select')) {
                target.val(origin.val());
            }
            if (origin.hasClass('hasDatepicker')) {
                target.val(moment().diff(origin.val(), 'years'));
            }
        });
    }
    const fieldHasVal = function(el) {
        "use strict";
        let hasVal = false;
        $.each(el, function(k, v) {
            if ($(v).val().length) {
                hasVal = true;
            }
        });
        return hasVal;
    }
    const isCheckboxChecked = function(el) {
        "use strict";
        let hasChecked = false;
        $.each(el, function(k,v){
            if ($(v).is(':checked')) {
                hasChecked = true;
            }
        });
        return hasChecked;
    }
    const setDefaultValue = function(el, defaultValue) {
        "use strict";
        if (el.is('input[type="checkbox"]') || el.is('input[type="radio"]')) {
            if (isCheckboxChecked(el) === false) {
                $.each(el, function(k,v) {
                    if ($(v).val() === defaultValue) {
                        $(v).prop('checked', 'checked');
                    }
                });
            }
        }
        if (el.is('select') && el.val().length < 1 && el.find('option[value="' + defaultValue + '"]').length > 0) {
            el.val(defaultValue);
        }
        if (el.is('select') && el.val().length < 1 && el.find('option:contains(' + defaultValue + ')').length > 0) {
            el.val(el.find('option:contains(' + defaultValue + ')').prop('value'));
        }
        if (el.is('input[type="text"]') && el.val().trim().length < 1) {
            el.val(defaultValue);
        }
        if (el.is('textarea') && el.val().trim().length < 1) {
            el.val(defaultValue);
        }
    }

    const validateEndDate = function() {
        "use strict";

        var d = new Date("<$client.tEventDates_8.Value>");
        //d.setMinutes(d.getMinutes() + d.getTimezoneOffset())
        
        let today = moment(new Date(), 'YYYY-MM-DD');
        let isValid = true;
        let message = "";
        var startDate = "";
        var endDate = "";
        if (/^DEU/.test($('#Evt_Location_Code').val())){
            startDate = moment($('#German_Previous_Start_Date_pseudo').datepicker('getDate'), 'YYYY-MM-DD');
            endDate = moment($('#German_Previous_End_Date_pseudo').datepicker('getDate'), 'YYYY-MM-DD');
        }

        if (/^ITA/.test($('#Evt_Location_Code').val())){
            startDate = $('#Italy_Previous_Start_Date_pseudo').datepicker('getDate') ? moment($('#Italy_Previous_Start_Date_pseudo').datepicker('getDate'), 'YYYY-MM-DD') : null;
            endDate = moment($('#Italy_Previous_End_Date_pseudo').datepicker('getDate'), 'YYYY-MM-DD');
        }
        
        if (endDate.diff(startDate, 'days') <= 0) {
            isValid = false;
            message = "End date should be greater than Start Date.";
        }

        if (endDate.diff(today, 'days') >= 0) {
            isValid = false;
            if (message.length) {
                message += '<br>';
            }
            message += "End date should be less than today.";
        }

        return {
            "isValid": isValid,
            "message": message
        };
    };

    const validateStartDate = function() {
        "use strict";

        var d = new Date("<$client.tEventDates_8.Value>");
        //d.setMinutes(d.getMinutes() + d.getTimezoneOffset())
        
        let today = moment(new Date(), 'YYYY-MM-DD');
        let isValid = true;
        let message = "";
        var startDate = "";
        var endDate = "";
        if (/^DEU/.test($('#Evt_Location_Code').val())){
            startDate = moment($('#German_Previous_Start_Date_pseudo').datepicker('getDate'), 'YYYY-MM-DD');
            endDate = moment($('#German_Previous_End_Date_pseudo').datepicker('getDate'), 'YYYY-MM-DD');
        }

        if (/^ITA/.test($('#Evt_Location_Code').val())){
            startDate = moment($('#Italy_Previous_Start_Date_pseudo').datepicker('getDate'), 'YYYY-MM-DD');
            endDate = moment($('#Italy_Previous_End_Date_pseudo').datepicker('getDate'), 'YYYY-MM-DD');
        }

        if (startDate.diff(today, 'days') >= 0) {
            isValid = false;
            message = "Start date should be less than today.";
        }
        return {
            "isValid": isValid,
            "message": message
        };
    };

    const validateEndDate2 = function() {
        "use strict";

        var d = new Date("<$client.tEventDates_8.Value>");
        //d.setMinutes(d.getMinutes() + d.getTimezoneOffset())
        let isValid = true;
        let message = "";
        let startDate2 = d.setMinutes(d.getMinutes() + d.getTimezoneOffset());
        let endDate2 = moment($('[name$=".ContractEndDate_display"]').datepicker('getDate'), 'YYYY-MM-DD');

        if (endDate2.diff(startDate2, 'days') < 1) {
            isValid = false;
            message = "Contract End date should be a minimum of one day after the date of the Start Date.";
        }
        return {
            "isValid": isValid,
            "message": message
        };
    };


    var checkNationalID = function() {return null;}; // deactivate useless functions from portal

    $(window).on('load', function() {

        $('.floating-label span').css('color', 'rgb(102, 102, 102)');
        $('.cal_and_button').prop('cellpadding', 0).prop('cellspacing', 0);
        var isProfileCompleted = sTaskComplete;
        // replace default submit button with paypal styled
        $('#TaskSummary_ButtonCancel').appendTo('#cancel').show();
        if (!isProfileCompleted) {
            $('#TaskSummary_ButtonSave').appendTo('#saveandcomplete').prop('onclick', null).show().text('Continue');
            $('#EUPDefaultSaveButton').appendTo('#save').show();
        }


        // show sections in event location
        $.each($('[data-location-group-hide]'), function(k,v) {
            if($(v).data('location-group-hide').indexOf(EVENT_COUNTRY) < 0) {
                if ($(v).hasClass('merge')) {
                    $(v).css('display', 'flex');
                    return;
                }
                $(v).show();
                return;
            }
            $(v).find('input[type="text"]').val('');
        });

        // focus style text and select fields
        $('form').on('focus', 'input[type="text"], select, textarea', function() {
            focusInputLabel($(this), true);
        }).on('blur', 'input[type="text"], select, textarea', function() {
            focusInputLabel($(this));
        });
        // focus style date fields
        $('form').on('focus change', 'input.hasDatepicker', function() {
            focusInputLabel($(this), true);
        }).on('blur change', 'input.hasDatepicker', function() {
            focusInputLabel($(this));
        });
        $('form').on('focus change', '.datepicker_button', function() {
            focusInputLabel($(this).closest('.cal_and_button').find('input[type="text"]'), true);
        }).on('blur change', '.datepicker_button', function() {
            focusInputLabel($(this).closest('.cal_and_button').find('input[type="text"]'));
            $(this).parent().find('.hasDatepicker').trigger('change'); 
        });

               
        var site_url = window.location.href;
        var exists = new RegExp('\\b-test-\\b', 'i').test(site_url);
        var sipEventCategory = ""; 

        if(exists){
            sipEventCategory = "<$client.tEventCategories_Category_51.Value>"; 
        }else{
            //sipEventCategory = "<$client.tEventCategories_Category_59.Value>";
            sipEventCategory = "<$client.tEventCategories_Category_51.Value>";
        }
        
        if(sipEventCategory == "Yes"){
            $("#sip-amount-section").show();
        }else{
            $("#sip-amount-section").hide().find('input[type="text"]').val("");
        }


        // focus field labels
        $.each($('form input[type="text"]:not(":hidden"), form select, form textarea'),function(k,v) {
            focusInputLabel($(v));
        });

        // pass validation data to each fields
        $.each($('[data-fieldgroup-validation]'), function(k,v) {
            $(v).find('input, select, textarea').data('validation', $(v).data('fieldgroup-validation'));
        });
        // pass regex data to each fields
        $.each($('[data-fieldgroup-regex]'), function(k,v) {
            $(v).find('input').data('regex', $(v).data('fieldgroup-regex'));
        });
        // pass regex message to each fields
        $.each($('[data-fieldgroup-message]'), function(k,v) {
            $(v).find('input').data('message', $(v).data('fieldgroup-message'));
        });

        // pass validation data length to each fields
        $.each($('[data-fieldgroup-minlength]'), function(k,v) {
            $(v).find('input').data('minlength', $(v).data('fieldgroup-minlength'));
        });
        $.each($('[data-fieldgroup-maxlength]'), function(k,v) {
            $(v).find('input').data('maxlength', $(v).data('fieldgroup-maxlength'));
        });
        
        // pass target label to each radio or checkbox fields
        $.each($('[data-fieldgroup-targetlabel]'), function(k,v) {
            $(v).find('input[type="checkbox"]:not(":hidden"), input[type="radio"]:not(":hidden")').data('label', $(v).data('fieldgroup-targetlabel'));
        });

        // pass title data to each fields
        $.each($('[data-fieldgroup-title]'), function(k,v) {
            $(v).find('input, select, textarea').data('title', $(v).data('fieldgroup-title'));
        });

        // validate each field by event and field type
        $('form').on('blur click', 'input[type="text"]:not(":hidden"):not(.hasDatepicker), input[type="radio"]:not(":hidden"), textarea:not(":hidden"), select', function() {
            if (this.id == 'Italy_Previous_Start_Date_pseudo' || this.id == 'Italy_Previous_End_Date_pseudo') {
                (this.value.length < 1) && validateField($(this));
                return;
            }
            if(!validateField($(this))) {
                $(this).parent().find('.text-error').css({'display': 'inline-block', 'margin-bottom': '-2px'}); // style hack since IE is such a reliable browser ;-) // changed block to inline-block
            }
        });

        // validate each date fields
        $('form').on('change click', 'input[type="text"]:not(":hidden").hasDatepicker', function() {
            validateField($(this)); 
        });

        $('form').on('blur change', $('[name$=".ContractEndDate_display"]'), function() {
            validateField($('[name$=".ContractEndDate_display"]'), false, validateEndDate2);
        });

        // submit the form if no errors
        $('form').on('click', '#TaskSummary_ButtonSave', function(e) {
            e.preventDefault();
            var formIsValid = true;
            $('[name$="employee-role-type"]:visible').trigger('change'); // special validation case
            $.each($('form input:not(":hidden"):not(".datepicker_button"), form select:not(":hidden"), form textarea:not(":hidden")'), function(k,v) {
                if(!validateField($(v))) {
                    formIsValid = false;
                }
            });
            if ($('#German_Previous_End_Date_pseudo:visible').length > 0 && !validateField($('#German_Previous_End_Date_pseudo'))) {
                formIsValid = false;
            }

            if ($('#Italy_Previous_End_Date_pseudo:visible').length > 0 && !validateField($('#Italy_Previous_End_Date_pseudo'))) {
                formIsValid = false;
            }

            if ($('#German_Previous_Start_Date_pseudo:visible').length > 0 && !validateField($('#German_Previous_Start_Date_pseudo'))) {
                formIsValid = false;
            }

            if ($('#Italy_Previous_Start_Date_pseudo:visible').length > 0 && !validateField($('#Italy_Previous_Start_Date_pseudo'))) {
                formIsValid = false;
            }

            if ($('#ContractEndDate_pseudo:visible').length > 0 && !validateField($('#ContractEndDate_pseudo:visible'), false, validateEndDate2)) {
                formIsValid = false;
            }

            if (formIsValid) {
                doSave_Custom('refer-Complete');
            }
            else {
                $("html, body").animate({ scrollTop: 0 }, "slow");
            }
        });

        if (sTaskComplete) {
            $('input, textarea, select', '.input_wrapper').prop('disabled', 'disabled');
        }

    });

    
</script>
